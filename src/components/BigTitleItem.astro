---
import { type CollectionEntry, type ContentCollectionKey } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

type Props = Pick<CollectionEntry<ContentCollectionKey>, "data" | "slug"> & {
  baseHref: ContentCollectionKey;
};

const { slug, data, baseHref } = Astro.props;
const { title, description, openMoji, pubDate, headerColor, contrastColor } =
  data;
---

<li aria-label={`${title}, ${description}`}>
  <a
    href={`/${baseHref}/${slug}/`}
    class="flex flex-col lg:space-x-4 stroke-white group lg:flex-row group"
    data-big-title-item
  >
    <div
      aria-hidden="true"
      class="block text-center min-h-96 shadow-md sm:rounded-2xl transition-all lg:blur-3xl group-hover:blur-none mb-12 lg:mb-0 opacity-100 lg:w-[1280px] lg:h-[480px] pointer-events-none lg:max-w-screen-md lg:absolute lg:-translate-x-20 lg:opacity-20 dark:lg:opacity-10 group-hover:opacity-100 lg:group-hover:translate-x-20 lg:motion-reduce:translate-x-20 lg:motion-reduce:blur-xl lg:-mt-52"
      style={{
        background: headerColor,
      }}
    >
      <div
        class="open-moji transition-all lg:text-[420px] text-[360px] lg:translate-y-96 translate-y-72"
        set:html={`&#x${openMoji};`}
      />
    </div>
    <h2
      class="mb-4 mt-12 lg:mt-0 text-6xl break-word font-extrabold tracking-widest text-center lg:text-start lg:text-9xl mix-blend-multiply dark:mix-blend-difference group-focus:text-slate-900 max-w-5xl"
      style={{ color: contrastColor }}
    >
      {title}
    </h2>
    <section
      class="lg:max-w-xs text-xl transition-all text-center lg:text-start lg:group-hover:opacity-10 group-focus:text-slate-900"
    >
      {description}
      <FormattedDate
        class="block opacity-60 group-focus:text-slate-900"
        date={pubDate}
        format={{ year: "numeric" }}
      />
    </section>
  </a>
</li>

<script>
  document.addEventListener("astro:page-load", () => {
    const items = document.querySelectorAll("[data-big-title-item]");

    items.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        const audios = [
          "/sound/happy-pop-1-185286.mp3",
          "/sound/happy-pop-2-185287.mp3",
          "/sound/happy-pop-3-185288.mp3",
        ];
        const audio = new Audio(
          audios[Math.floor(Math.random() * audios.length)]
        );
        audio.volume = 0.3;
        audio.play();
      });
    });
  });
</script>
