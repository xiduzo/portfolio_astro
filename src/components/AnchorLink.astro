---
const props = Astro.props;
---

<anchor-link>
  <a
    href={`#${props.id}`}
    aria-label="Link to this heading"
    class="inline-block bg-zinc-800 border border-gray-600 md:opacity-5 transition-all duration-300 py-2 px-3 rounded-md font-extrabold no-underline group-hover:opacity-100"
  >
    #
  </a>
  <span aria-hidden="true" data-feedback class="absolute text-sm py-2.5"
    >Link copied</span
  >
</anchor-link>

<script>
  import anime from "animejs";
  class AnchorLink extends HTMLElement {
    constructor() {
      super();

      const link = this.querySelector("a");

      const animation = anime({
        targets: this.querySelector("[data-feedback]"),
        opacity: [0, 1],
        translateX: [10, 15],
        duration: 500,
        easing: "easeInOutQuad",
        autoplay: false,
      });

      if (!link) return;
      link.addEventListener("click", (e) => {
        e.preventDefault();
        const hash = link.getAttribute("href")!;
        navigator.clipboard.writeText(
          window.location.origin + window.location.pathname + hash
        );

        const setHref = () => {
          window.removeEventListener("scrollend", setHref);
          window.location.hash = hash;
        };

        animation.play();
        animation.finished.then(() => {
          animation.pause();
          animation.seek(0);
          const { top } = link.getBoundingClientRect();
          window.addEventListener("scrollend", setHref);
          window.scrollTo({
            top: top + window.scrollY - 100,
            behavior: "smooth",
          });
        });
      });
    }
  }

  customElements.define("anchor-link", AnchorLink);
</script>
