---
export type Props = {
  background: string;
};

const { background } = Astro.props;
---

<page-transition aria-hidden="true" class="fixed inset-0 bottom-0 top-0 z-20">
  <section
    data-page-transition-background
    class="fixed inset-0 bg-slate-100 motion-reduce:hidden dark:bg-stone-900"
  >
  </section>
  <section
    data-page-transition-header
    class="absolute inset-0"
    style={{ background }}
  >
  </section>
</page-transition>

<script>
  import anime from "animejs";

  class PageTransition extends HTMLElement {
    constructor() {
      super();

      const reduceMotion =
        window?.matchMedia(`(prefers-reduced-motion: reduce)`).matches ||
        window?.matchMedia(`(prefers-reduced-motion: reduce)`).matches;

      const rect = document
        .querySelector("main")
        ?.querySelector("scrolling-text")
        ?.getBoundingClientRect();
      const bottom = Math.max(0, rect?.bottom ?? 0);

      anime
        .timeline()
        .add({
          targets: this.querySelector("[data-page-transition-header]"),
          translateY: [window.innerHeight, 0],
          duration: 250,
          easing: "linear",
        })
        .add({
          targets: this.querySelector("[data-page-transition-background]"),
          opacity: 0,
          duration: 200,
          offset: "+=300",
        })
        .add({
          targets: this.querySelector("[data-page-transition-header]"),
          translateY: reduceMotion ? 0 : -window.innerHeight + bottom,
          easing: "easeOutQuad",
          duration: reduceMotion ? 0 : 150,
          offset: 50,
        });

      anime({
        targets: this.querySelector("[data-page-transition-header]"),
        opacity: [1, 0.3],
        duration: reduceMotion ? 1250 : 250,
        easing: "linear",
        delay: 575,
      }).finished.then(() => {
        this.remove();
      });
    }
  }
  customElements.define("page-transition", PageTransition);
</script>
